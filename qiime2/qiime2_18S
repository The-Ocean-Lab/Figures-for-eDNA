Based on Wright Labs workshop 05/12/2025 and 05/13/2025

1.0 Set Up

# creating a working directory folder
# create a folder called raw_data
# move all fastq.gz / .fastq files into the raw_data folder

#### activate qiime2 ####
conda activate
conda activate qiime2-amplicon-2025.7               # open qiime2 environment (this protocol is based on version 2025.7)

1.1 Create a Mapping File

#### set and go into working directory #### 
workdir="/Users/drocean/Desktop/18S"                 # use absolute pathname of folder
cd "$workdir"                                        # go into working directory
ls -d "$PWD/raw_data/"                               # create a raw_data folder
cd raw_data                                          # go into raw_data folder
rm -f ../ids.txt                                     # removes old id.text file if there is one

for f in *.fastq.gz; do
  name=$(echo "$f" | sed -E 's/(.*)_[Rr][12].fastq.gz/\1/')
  echo "$name" >> ../ids.txt
done                                                 # extracts the name of the file before the underscore and a R or r, 1 or 2, and .fastq.gz change to .fastq if files are gunzipped
                                                     # puts these extracted names in a file called ids.txt

cd ..                                                # goes out of raw_data and into working directory 
ls -d "$PWD/raw_data/"*.fastq.gz > paths.txt         # creates a file with all the path names for fasta.gz files
paste -d "," ids.txt paths.txt > combined.csv        # combines the id.txt and path.txt files 
awk -F "," '$2 ~ /_R1/ {print $1 "," $2 ",forward"}' combined.csv > forward.csv           
                                                     # adds and labels the forward reads to the combined file
awk -F "," '$2 ~ /_R2/ {print $1 "," $2 ",reverse"}' combined.csv > reverse.csv
                                                     # adds and labels the reverse reads to the combined file
echo "sample-id,absolute-filepath,direction" > header.csv 
                                                     # creates a csv with sampleid, filepath and direction (just columns)
cat header.csv forward.csv reverse.csv > mapping.csv # add the data from each file to the appropiate column
mkdir -p import_intermediate_files                   # makes a file in working directory called intermediate files
mv paths.txt combined.csv forward.csv reverse.csv header.csv import_intermediate_files 
                                                     # puts the listed files into the intermediate files folder

1.2 Importing Raw Reads

workdir="/Users/drocean/Desktop/18S"                 
cd "$workdir"                                        # stay in same working directory, use code if need to reset
                                                     # open all files with gunzip before next line

echo "sample-id,absolute-filepath,direction" > mapping.csv
for f in /Users/drocean/Desktop/18S/raw_data/*_R1_001.fastq.gz; do
  r2=${f/_R1_/_R2_}
  if [[ -f "$r2" ]]; then
    sample=$(basename "$f" | sed -E 's/_L001_R1_001.fastq//')
    echo "$sample,$f,forward" >> mapping.csv
    echo "$sample,$r2,reverse" >> mapping.csv
  else
    echo "Missing reverse read for $f"
  fi
done

                                                    # correctly formats the manifest file, there should be a identical sample id name with F and R, change the working directory, check to see if files are fastq.gz or fastq, check if R1_001 or R1

qiime tools import \
  --type 'SampleData[PairedEndSequencesWithQuality]' \
  --input-path mapping.csv \
  --output-path paired-end-demux.qza \
  --input-format PairedEndFastqManifestPhred33

                                                    # creates a paired_end_demux.qza file which qiime can read and access

2. Quality Check

qiime demux summarize \
  --i-data paired-end-demux.qza \
  --o-visualization VIEWABLE_paired-end-demux.qzv

                                                    # access https://view.qiime2.org/ and drag file
                                                    # creates a file has sample id, # of forward seqs, & and # of reverse seqs
qiime vsearch fastq-stats \
  --i-sequences paired-end-demux.qza \
  --p-threads 1 \
  --o-visualization VIEWABLE_ee_paired-end-demux.qzv

                                                    # creates a file quality plot for the forward and reverse reads
                                                    # use this file to determine where to trim base pairs

3. Denoise Data

qiime dada2 denoise-paired \
  --i-demultiplexed-seqs paired-end-demux.qza \
  --p-trim-left-f 5 \
  --p-trim-left-r 5 \
  --p-trunc-len-f # \
  --p-trunc-len-r # \
  --o-table table.qza \
  --o-representative-sequences rep-seqs.qza \
  --o-denoising-stats denoising-stats.qza \
  --p-n-threads 4 \
  --p-max-ee-f 2 \
  --p-max-ee-r 2

                                                    # only inputs that should be changed are p-trunc-len-f/r
                                                    # p-trim left cuts off the first couple of bases
                                                    # p-max-ee-f/r determines how much error is allowed

qiime metadata tabulate \
  --m-input-file denoising-stats.qza \
  --o-visualization VIEWABLE_denoising-stats.qzv   # makes the denoising stats viewable showing how many were filtered, denoised, merged, and non-chimeric

qiime feature-table summarize \
  --i-table table.qza \
  --o-visualization VIEWABLE_unfiltered_table.qzv   # shows the distrubution unique sequences and frequency in each sample

qiime feature-table tabulate-seqs \
  --i-data rep-seqs.qza \
  --o-visualization VIEWABLE_rep-seqs.qzv           # has each unique sequence and the corresponding sequence, gives a table about average length of these seqs

4.1 Assigning Taxonomy

qiime feature-classifier classify-sklearn \
  --i-classifier /Users/drocean/Desktop/classifer/silva-138-F04-R22-classifier.qza \
  --i-reads rep-seqs.qza \
  --p-n-jobs 4 \
  --o-classification taxonomy.qza

qiime feature-classifier classify-sklearn \
  --i-classifier /Users/drocean/Desktop/classifer_databse_18S/EUKARYOME_1_9_4/eukaryome-194-F04-R22-classifier.qza \
  --i-reads rep-seqs.qza \
  --p-n-jobs 4 \
  --o-classification taxonomy.qza
                                               # use the absolute pathname of the trained database and assigns taxonomy to ASVs, silva better for microorganisms

qiime metadata tabulate \
  --m-input-file taxonomy.qza \
  --o-visualization VIEWABLE_taxonomy.qzv      # makes viewable taxonomy file

qiime taxa barplot \
  --i-table table.qza \
  --i-taxonomy taxonomy.qza \
  --o-visualization VIEWABLE_taxa-bar-plots.qzv 
                                               # veiwable bar plot with relative frequencies of kingdoms
5.0 Generate Tree

qiime phylogeny align-to-tree-mafft-fasttree \
  --i-sequences rep-seqs.qza \
  --o-alignment aligned-rep-seqs.qza \
  --o-masked-alignment masked-aligned-rep-seqs.qza \
  --o-tree unrooted-tree.qza \
  --o-rooted-tree rooted-tree.qza \
  --p-n-threads 4                              # XXX what does this do 


Format Data

mkdir alpha_div
mkdir beta_div
mkdir R
mkdir ancom                                    # makes folder with all these titles


mapping="/Users/drocean/Desktop/zuri_qiime2/18S/mapping.csv"
                                               # set mapping.csv as mapping for the next set of commands
cp "$mapping" alpha_div/
cp "$mapping" beta_div/
cp "$mapping" R/
cp "$mapping" ancom/                           # puts a copy of the mapping.csv in each folder

taxonomy="/Users/drocean/Desktop/zuri_qiime2/18S/taxonomy.qza"
table="/Users/drocean/Desktop/zuri_qiime2/18S/table.qza"
                                               # sets taxonomy and table for the next set of commands
qiime taxa filter-table \
  --i-table $table \
  --i-taxonomy $taxonomy \
  --p-exclude mitochondria,chloroplast \
  --o-filtered-table filtered-table
                                               # filters out mitochondria and chloroplast sequences

qiime feature-table summarize \
  --i-table /Users/drocean/Desktop/zuri_qiime2/18S/filtered-table.qza \
  --o-visualization VIEWABLE_chloroplast-mitochondria_filtered-table.qzv
                                               # viewable frequency table with new exclusions 
cutoff=0                                       # filters out anything with a frequency of 0 (so no filtering)

qiime feature-table filter-samples \
  --i-table /Users/drocean/Desktop/zuri_qiime2/18S/filtered-table.qza \
  --p-min-frequency $cutoff \
  --o-filtered-table filtered-cutoff-table    # if cutoff=0 then no filtering and there will be a "no filtering requested" error

cp filtered-cutoff-table.qza ancom
mv ancom/filtered-cutoff-table ancom/filtered_feature-table.qza


Relative Abundance

qiime taxa collapse \
  --i-table filtered-table.qza \
  --i-taxonomy taxonomy.qza \
  --p-level 2 \
  --o-collapsed-table phyla-table.qza 
                                             # phyla can be changed to order,family,genus etc
qiime feature-table relative-frequency \
--i-table phyla-table.qza \
--o-relative-frequency-table rel-phyla-table.qza
                                             # creates the abundance percents
qiime tools export \
  --input-path rel-phyla-table.qza \
  --output-path rel-table                    # creates a folder called rel-table and puts the folder in there

cd rel-table                                 # goes into rel-table folder
biom convert -i freq-table.biom -o rel-phyla-table.tsv --to-tsv
                                             # converts into a .tsv file 

Alpha Rarefraction

# pull up VIEWABLE_chloroplast-mitochondria_filtered-table.qzv as a guide to determine the subsampling depth
# saving mapping file as a tsv with sample id, year, month, date, season, site, replicate, forward path, and reverse path

cp filtered-cutoff-table.qza alpha_div       # puts a copy of filtered-cutoff-table into alpha_div folder

qiime diversity alpha-rarefaction \
  --i-table filtered-cutoff-table.qza \
  --i-phylogeny rooted-tree.qza \
  --p-max-depth # \
  --m-metadata-file metadata.tsv \
  --o-visualization alpha-rarefaction.qzv    # choose --p-max-depth based on freq summary

# download shannon diversity as a csv and move to 18S folder

mv shannon.csv alpha_div                     # moves shannon.csv to alpha_div
mv alpha-rarefaction.qzv alpha_div           # moves alpha-rarefraction.qzv to alpha div

Alpha and Beta Diversity

qiime diversity core-metrics-phylogenetic \
  --i-phylogeny rooted-tree.qza \
  --i-table filtered-cutoff-table.qza \
  --p-sampling-depth # \
  --m-metadata-file metadata.tsv \
  --output-dir core-metrics-results

                                             # use the same sampling depth number as the rarefaction command

qiime diversity alpha-group-significance \
  --i-alpha-diversity core-metrics-results/faith_pd_vector.qza \
  --m-metadata-file metadata.tsv \
  --o-visualization core-metrics-results/faith-pd-group-significance.qzv

qiime diversity alpha-group-significance \
  --i-alpha-diversity core-metrics-results/evenness_vector.qza \
  --m-metadata-file metadata.tsv \
  --o-visualization core-metrics-results/evenness-group-significance.qzv

qiime diversity beta-group-significance \
  --i-distance-matrix core-metrics-results/unweighted_unifrac_distance_matrix.qza \
  --m-metadata-file metadata.tsv \
  --m-metadata-column Site \
  --o-visualization core-metrics-results/unweighted-unifrac-site-significance.qzv \
  --p-pairwise

qiime diversity beta-group-significance \
  --i-distance-matrix core-metrics-results/unweighted_unifrac_distance_matrix.qza \
  --m-metadata-file metadata.tsv \
  --m-metadata-column Season \
  --o-visualization core-metrics-results/unweighted-unifrac-season-significance.qzv \
  --p-pairwise

